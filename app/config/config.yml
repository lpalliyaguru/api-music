imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@ApiBundle/Resources/config/services.yml" }
    - { resource: "@AppBundle/Resources/config/services.yml" }
    - { resource: "@AdminBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    http_accept_headers:
        - x-requested-with
        - content-type
        - authentication
        - accept
        - origin
        - Authorization
        - x-csrftoken
        - user-agent
        - accept-encoding
        - Content-Range
        - Content-Disposition
        - Content-Description
    web_dir : %kernel.root_dir%\..\web

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

doctrine_mongodb:
    default_commit_options: ~

    document_managers:
        default:
            auto_mapping:         true

    default_database: %mongo_database_name%

    connections:
        default:
            server: %mongo_database_host%
            options:
                username: %mongo_database_username%
                password: %mongo_database_password%
    proxy_namespace:      Proxies
    proxy_dir:            %kernel.cache_dir%/doctrine/odm/mongodb/Proxies
    auto_generate_proxy_classes:  false
    hydrator_namespace:   Hydrators
    hydrator_dir:         %kernel.cache_dir%/doctrine/odm/mongodb/Hydrators
    auto_generate_hydrator_classes:  true
    default_document_manager:  ~
    default_connection:   ~
    default_database:     default

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    routing_loader:
        default_format: json
    view:
        view_response_listener: 'force'

knp_gaufrette:
    adapters:
        profile_photos:
            aws_s3:
                service_id: 'music.aws_s3.client'
                bucket_name: %amazon_s3_bucket_name_assets%
                options:
                    directory: 'assets'
                    create: false
                    acl: 'public-read'

    filesystems:
        photo_storage:
            adapter:    profile_photos
            alias:      photo_storage_filesystem